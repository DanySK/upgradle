name: CI
on:
  push:
  schedule:
    - cron: '0 3 * * SUN'

jobs:
  CI-Complete:
    needs: Build-Success
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: success
      - shell: bash
        run: '[ -f ok ]'
  Build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        jvm_version: [8, 11, 14]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jvm_version }}
      - name: Clone
        shell: bash
        run: git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY $GITHUB_WORKSPACE
      - name: Checkout
        shell: bash
        run: git checkout "$(echo ${{ github.event.ref }} | sed s#refs/heads/## | sed s#refs/tags##)"
      - name: Check
        shell: bash
        run: |
          if [ -x 'build.sh' ]
          then
            echo 'Detected custom build instructions'
            ./build.sh
          elif [ -x 'gradlew' ]
          then
            echo 'Detected gradle wrapper, running ./gradlew clean check --parallel'
            ./gradlew clean check --parallel
          elif [ -f 'pom.xml' ]
          then
            echo 'Detected Maven pom.xml, running mvn clean install'
            mvn clean install
          else
            echo 'No valid configuration detected, failing'
            exit 1
          fi
      - name: Deploy
        if: ${{ matrix.os == 'ubuntu' && matrix.jvm_version == 8 }}
        shell: bash
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: danysk
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -x 'deploy.sh' ]
          then
            echo 'Detected custom deploy instructions'
            ./deploy.sh
          elif [ -x 'gradlew' ]
          then
            echo 'Detected gradle wrapper, running ./gradlew publish --parallel (if available)'
            if ./gradlew tasks | grep publish
            then
              ./gradlew publish --parallel
            fi
          elif [ -f 'pom.xml' ]
          then
            echo 'Detected Maven pom.xml, running mvn deploy'
            mvn deploy
          else
            echo 'No valid configuration detected, failing'
            exit 1
          fi
  Build-Success:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - shell: bash
        run: touch ok
      - uses: actions/upload-artifact@v2
        with:
          name: success
          path: ok
  Automerge:
    needs: CI-Complete
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: automerge
        uses: "DanySK/yaagha@master"
        env:
          GITHUB_TOKEN: "${{ secrets.AUTOMERGE_TOKEN }}"
          MERGE_FORKS: "false"
          MERGE_LABELS: "version-upgrade"
          MERGE_METHOD: "rebase"
          CLOSE_ON_CONFLICT: "true"
          DELETE_BRANCH_ON_CLOSE: "true"
          GIT_USER_NAME: "Danilo Pianini"
          GIT_USER_EMAIL: "danilo.pianini@gmail.com"
